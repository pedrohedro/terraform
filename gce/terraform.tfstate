{
  "version": 4,
  "terraform_version": "1.3.7",
  "serial": 18,
  "lineage": "7ac67b57-38ce-518a-3ce7-f5c64ade3e3b",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 6,
          "attributes": {
            "advanced_machine_features": [],
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/debian-11-bullseye-v20230206",
                    "labels": {
                      "my_label": "value"
                    },
                    "size": 10,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/white-list-372815/zones/us-central1-a/disks/test-1"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Broadwell",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/white-list-372815/zones/us-central1-a/instances/test-1",
            "instance_id": "8514839587382328354",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "e2-medium",
            "metadata": {
              "foo": "bar"
            },
            "metadata_fingerprint": "N7Osmg_p0P4=",
            "metadata_startup_script": "#!/bin/bash -e\n\n###------------------------------------------------------------------------------------------###\n\n### Author:         Josue Rojas Montero\n\n### Mail:           josue.rojas@noexternalmail.hsbc.com\n\n### Description:    Setup of programs, users and libraries installation via local repositories\n\n### Date:           Julio-22-2021\n\n### Modified:       None\n\n### Version:        1.0.0\n\n### Script:         tableau_setup.sh\n\n### Location:       GitHub repository\n\n### Instructions:   Compute Engine VM Instances provisioning via Terraform\n\n### Changes:        \n\n###                 -\n\n###------------------------------------------------------------------------------------------###\n\n \n\n#-----------\u003e LDAP FILES, important to request for PROD\n\n# Important, the LDAP.json or config.json settings file is the used to query/filter LDAP Groups/Users and requires a LDAP.cer file\n\n#TABLEAU_IDENTITY=\"regtbl.json\"\n\n#TABLEAU_IDENTITY=\"conftbl_ad.json\"\n\n#TABLEAU_IDENTITY=\"conftbl.json\"\n\n#TABLEAU_IDENTITY=\"LDAP.json\"\n\n# ---- Leyla Viera (leyla.v.dearaujo@hsbc.com) provides the LDAP .cer (HSBC CRES SHA2.renametocer)\n\n# https://alm-confluence.systems.uk.hsbc/confluence/display/CATAD/How+to+Request+a+Production+ADLDS+Group+In+Service+Now  \n\n#----------- LDAP FILES, important to request for PROD\n\n \n\n#TABLEAU_ENVIROMENT=\"tableau_setup.sh\"\n\n \n\nTBL_ENVIRONMENT=\"dev\"\n\necho \"TBL_ENVIRONMENT: ${TBL_ENVIRONMENT}\" \u003e\u003e /tmp/setup.log\n\nif [ \"${TBL_ENVIRONMENT}\" = \"oat_dev\" ]; then\n\n    TBL_HOST=\"tableau.bzdwh.oat.hsbc-10340762-bzdwh2-dev.dev.gcp.cloud.us.hsbc\"\n\n    HOST_NAME=\"financerisk-tableau-server-10340762-bzdwh2-dev\"\n\nelif [ \"${TBL_ENVIRONMENT}\" = \"uat\" ]; then\n\n    TBL_HOST=\"tablu.bzdwh.uat.hsbc-10340762-bzdwhuat-dev.dev.gcp.cloud.us.hsbc\"\n\n    HOST_NAME=\"financerisk-tableau-server-10340762-bzdwhuat-dev\"\n\nelif [ \"${TBL_ENVIRONMENT}\" = \"prod\" ]; then\n\n    TBL_HOST=\"tableau.bzdwh.hsbc-10340762-bzdwh-prod.prod.gcp.cloud.us.hsbc\"\n\n    HOST_NAME=\"financerisk-tableau-server-10340762-bzdwh-prod\"\n\nelse\n\n    TBL_HOST=\"tableau.bzdwh.dev.hsbc-10340762-bzdwh-dev.dev.gcp.cloud.us.hsbc\"\n\n    HOST_NAME=\"financerisk-tableau-server-10340762-bzdwh-dev\"\n\nfi\n\nsudo hostnamectl set-hostname $TBL_HOST\n\n \n\n#---\u003e Local variables for Tableau service\n\nTABLEAU_ADMIN=\"tsmadmin\"\n\nTABLEAU_SETUP=/tmp\n\nTABLEAU_INST_LOG=/tmp/setup.log\n\nTABLEAU_SRV=/etc/opt/tableau/tableau_server\n\nTABLEAU_BASE=/opt/tableau/tableau_server/packages\n\nTABLEAU_VER=20204.21.1217.2244\n\nTABLEAU_SSL=/opt/tableau/tableau_server/data/ssl\n\nTABLEAU_VAR=/var/opt/tableau/tableau_server\n\nTABLEAU_PROXY=\"20-proxy.conf\"\n\nTABLEAU_STORE_LIC=\"internal-financerisk-configuration-bucket-${TBL_ENVIRONMENT}/offline-deactivation\"\n\n \n\nTABLEAU_TRIAL=true\n\nTABLEAU_KEY=TSCT-B31D-9000-B9AC-8CD5\n\n \n\nSRV_PROXY=http://intpxy6.hk.hsbc:18084/\n\nPROXY_ENABLE=true\n\n \n\nMULTINIC_INSTANCE_NIC1_IP=$(curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/1/ip)\n\nSTANDALONE_SUBNET_GATEWAY=$(curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/1/gateway)\n\nsudo ifconfig eth1 $MULTINIC_INSTANCE_NIC1_IP netmask 255.255.255.255 broadcast $MULTINIC_INSTANCE_NIC1_IP mtu 1430\n\necho \"1 rt1\" | sudo tee -a /etc/iproute2/rt_tables\n\nsudo ip route add $STANDALONE_SUBNET_GATEWAY src $MULTINIC_INSTANCE_NIC1_IP dev eth1 table rt1\n\nsudo ip route add default via $STANDALONE_SUBNET_GATEWAY dev eth1 table rt1\n\nsudo ip rule add from $MULTINIC_INSTANCE_NIC1_IP/32 table rt1\n\nsudo ip rule add to $MULTINIC_INSTANCE_NIC1_IP/32 table rt1\n\nsudo ip route add 192.168.196.1 src $MULTINIC_INSTANCE_NIC1_IP dev eth1 table rt1\n\nsudo ip route add 192.168.196.0/22 dev eth1\n\n \n\nRESTORE_LATESTS=false\n\nBACKUP_ENABLED=true\n\necho \"BACKUP_ENABLED: $BACKUP_ENABLED\" \u003e\u003e ${TABLEAU_INST_LOG}\n\necho \"RESTORE_LATESTS: $RESTORE_LATESTS\" \u003e\u003e ${TABLEAU_INST_LOG}\n\necho \"RESTORE_FILE: $RESTORE_FILE\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n \n\n#Setup Tableau initial environment\n\nif [ \"$PROXY_ENABLE\" = true ] ; then\n\n    echo \"${TABLEAU_BASE}/scripts.${TABLEAU_VER}/initialize-tsm -f --accepteula -a ${TABLEAU_ADMIN} --http_proxy=${SRV_PROXY}\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/scripts.${TABLEAU_VER}/initialize-tsm -f --accepteula -a ${TABLEAU_ADMIN} --http_proxy=${SRV_PROXY} \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nelse\n\n    echo \"${TABLEAU_BASE}/scripts.${TABLEAU_VER}/initialize-tsm -f --accepteula -a ${TABLEAU_ADMIN}\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/scripts.${TABLEAU_VER}/initialize-tsm -f --accepteula -a ${TABLEAU_ADMIN} \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nfi\n\nwait\n\nif [ \"$TABLEAU_TRIAL\" = true ] ; then\n\n    echo \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses activate --trial\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses activate --trial \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    wait\n\nfi\n\n#---\u003e Proxy configuration\n\nif [ \"$PROXY_ENABLE\" = true ] ; then\n\n    MULTINIC_INSTANCE_NIC0_IP=$(curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip)\n\n    echo $'\\n' \u003e\u003e ${TABLEAU_SETUP}/${TABLEAU_PROXY}\n\n    echo \"no_proxy=\\\"localhost,127.0.0.1,${MULTINIC_INSTANCE_NIC0_IP},${TBL_HOST},${HOST_NAME},gcp-asia-east2-p-ombbusvis-tableau,*.internal\\\"\" \u003e\u003e ${TABLEAU_SETUP}/${TABLEAU_PROXY}\n\n    sudo -u tableau mkdir -p ${TABLEAU_VAR}/.config/systemd/tableau_server.conf.d/\n\n    chown tableau:tableau ${TABLEAU_SETUP}/${TABLEAU_PROXY}\n\n    sudo -u tableau mv ${TABLEAU_SETUP}/${TABLEAU_PROXY} ${TABLEAU_VAR}/.config/systemd/tableau_server.conf.d/\n\nfi\n\nif [ -v TABLEAU_KEY ] \u0026\u0026 [ ! -z \"$TABLEAU_KEY\" ]; then\n\n    echo \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses activate -k ${TABLEAU_KEY}\" \u003e\u003e /tmp/setup.log\n\n    ${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses activate -k ${TABLEAU_KEY} \u003e\u003e /tmp/setup.log 2\u003e\u00261 \u0026\n\n    wait\n\n    echo \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses get-offline-deactivation-file -k ${TABLEAU_KEY} --output-dir ${TABLEAU_SETUP}\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses get-offline-deactivation-file -k ${TABLEAU_KEY} --output-dir ${TABLEAU_SETUP} \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    wait\n\n    TBL_LIC_DATE=$(date +\"%Y%m%d%H%M%S\")\n\n    echo \"gsutil cp ${TABLEAU_SETUP}/deactivate.tlq gs://${TABLEAU_STORE_LIC}/deactivate_${TBL_ENVIRONMENT}_${TBL_LIC_DATE}.tlq\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    gsutil cp ${TABLEAU_SETUP}/deactivate.tlq gs://${TABLEAU_STORE_LIC}/deactivate_${TBL_ENVIRONMENT}_${TBL_LIC_DATE}.tlq \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    wait\n\n    echo \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses list\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses list \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    wait\n\nfi\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm register --file ${TABLEAU_SETUP}/regtbl.json\"  \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm register --file ${TABLEAU_SETUP}/regtbl.json \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm security external-ssl enable --cert-file ${TABLEAU_SSL}/financerisk-tableau-bzdwh.cloud.uk.hsbc.cer --key-file ${TABLEAU_SSL}/financerisk-tableau-bzdwh.cloud.uk.hsbc.key --trust-admin-controller-cert\" \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n#${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm security external-ssl enable --cert-file ${TABLEAU_SSL}/financerisk-tableau-bzdwh.cloud.uk.hsbc.cer --key-file ${TABLEAU_SSL}/financerisk-tableau-bzdwh.cloud.uk.hsbc.key --trust-admin-controller-cert \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/repository.${TABLEAU_VER}/jre/bin/keytool -importcert -file ${TABLEAU_SSL}/HSBC_CRESTEST_SHA2.crt -alias aa-lds-test-us.crestest.addev.hsbc -keystore ${TABLEAU_SRV}/tableauservicesmanagerca.jks -storepass changeit -noprompt\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/repository.${TABLEAU_VER}/jre/bin/keytool -importcert -file ${TABLEAU_SSL}/HSBC_CRESTEST_SHA2.crt -alias aa-lds-test-us.crestest.addev.hsbc -keystore ${TABLEAU_SRV}/tableauservicesmanagerca.jks -storepass changeit -noprompt \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm settings import -f ${TABLEAU_SETUP}/conftbl_gw.json\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm settings import -f ${TABLEAU_SETUP}/conftbl_gw.json \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\nsudo chmod 555 ${TABLEAU_SETUP}/${TABLEAU_IDENTITY}\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm settings import -f ${TABLEAU_SETUP}/${TABLEAU_IDENTITY}\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm settings import -f ${TABLEAU_SETUP}/${TABLEAU_IDENTITY} \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\n#${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm topology external-services repository enable -f ${TABLEAU_SETUP}/external_db.json -c ${TABLEAU_SSL}/tableau-postgresql.pem \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n#wait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm user-identity-store verify-group-mappings -v Infodir-HBMX-HBBZ-DWH-TABLEAU\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm user-identity-store verify-group-mappings -v Infodir-HBMX-HBBZ-DWH-TABLEAU \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm initialize -r\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm initialize -r \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tabcmd initialuser --server localhost:80 -u US-SVC-DWHAdmin -p LiolY24JKEUqaLQ598Lc32HsVbL\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tabcmd initialuser --server localhost:80 -u US-SVC-DWHAdmin -p LiolY24JKEUqaLQ598Lc32HsVbL \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\nif [ \"$RESTORE_LATESTS\" = true ] ; then\n\n    echo \"Restoring Tableau from backup\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    echo \"sudo /opt/tableau/backup/tbl_restore.sh $RESTORE_FILE\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    sudo /opt/tableau/backup/tbl_restore.sh $RESTORE_FILE \u003e\u003e ${TABLEAU_INST_LOG}\n\n    echo \"Restoration done\" \u003e\u003e ${TABLEAU_INST_LOG}\n\nfi\n\nif [ \"$BACKUP_ENABLED\" = true ] ; then\n\n    echo \"Enabling Tableau backup\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    sudo crontab -u root -l \u003e ${TABLEAU_SETUP}/cron_backup.dat\n\n    sudo cat ${TABLEAU_SETUP}/crontab.backup \u003e\u003e ${TABLEAU_SETUP}/cron_backup.dat\n\n    sudo crontab -u root ${TABLEAU_SETUP}/cron_backup.dat\n\n    sudo rm ${TABLEAU_SETUP}/cron_backup.dat\n\n    echo \"sudo crontab -u root -l\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    sudo crontab -u root -l \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    echo \"Backup setup done\" \u003e\u003e ${TABLEAU_INST_LOG}\n\nfi\n\necho \"Setup completed.\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm status \u003e\u003e ${TABLEAU_INST_LOG}",
            "min_cpu_platform": "",
            "name": "test-1",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "34.27.250.205",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "ipv6_access_config": [],
                "ipv6_access_type": "",
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/white-list-372815/global/networks/default",
                "network_ip": "10.128.0.14",
                "nic_type": "",
                "queue_count": 0,
                "stack_type": "IPV4_ONLY",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/white-list-372815/regions/us-central1/subnetworks/default",
                "subnetwork_project": "white-list-372815"
              }
            ],
            "project": "white-list-372815",
            "reservation_affinity": [],
            "resource_policies": null,
            "scheduling": [
              {
                "automatic_restart": true,
                "instance_termination_action": "",
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false,
                "provisioning_model": "STANDARD"
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-list-372815/zones/us-central1-a/instances/test-1",
            "service_account": [],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": [
              "bar",
              "foo"
            ],
            "tags_fingerprint": "1gqCRgrww4E=",
            "timeouts": null,
            "zone": "us-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9"
        },
        {
          "index_key": 1,
          "schema_version": 6,
          "attributes": {
            "advanced_machine_features": [],
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/debian-11-bullseye-v20230206",
                    "labels": {
                      "my_label": "value"
                    },
                    "size": 10,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/white-list-372815/zones/us-central1-a/disks/test-2"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Broadwell",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/white-list-372815/zones/us-central1-a/instances/test-2",
            "instance_id": "916961210041859190",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "e2-medium",
            "metadata": {
              "foo": "bar"
            },
            "metadata_fingerprint": "N7Osmg_p0P4=",
            "metadata_startup_script": "#!/bin/bash -e\n\n###------------------------------------------------------------------------------------------###\n\n### Author:         Josue Rojas Montero\n\n### Mail:           josue.rojas@noexternalmail.hsbc.com\n\n### Description:    Setup of programs, users and libraries installation via local repositories\n\n### Date:           Julio-22-2021\n\n### Modified:       None\n\n### Version:        1.0.0\n\n### Script:         tableau_setup.sh\n\n### Location:       GitHub repository\n\n### Instructions:   Compute Engine VM Instances provisioning via Terraform\n\n### Changes:        \n\n###                 -\n\n###------------------------------------------------------------------------------------------###\n\n \n\n#-----------\u003e LDAP FILES, important to request for PROD\n\n# Important, the LDAP.json or config.json settings file is the used to query/filter LDAP Groups/Users and requires a LDAP.cer file\n\n#TABLEAU_IDENTITY=\"regtbl.json\"\n\n#TABLEAU_IDENTITY=\"conftbl_ad.json\"\n\n#TABLEAU_IDENTITY=\"conftbl.json\"\n\n#TABLEAU_IDENTITY=\"LDAP.json\"\n\n# ---- Leyla Viera (leyla.v.dearaujo@hsbc.com) provides the LDAP .cer (HSBC CRES SHA2.renametocer)\n\n# https://alm-confluence.systems.uk.hsbc/confluence/display/CATAD/How+to+Request+a+Production+ADLDS+Group+In+Service+Now  \n\n#----------- LDAP FILES, important to request for PROD\n\n \n\n#TABLEAU_ENVIROMENT=\"tableau_setup.sh\"\n\n \n\nTBL_ENVIRONMENT=\"dev\"\n\necho \"TBL_ENVIRONMENT: ${TBL_ENVIRONMENT}\" \u003e\u003e /tmp/setup.log\n\nif [ \"${TBL_ENVIRONMENT}\" = \"oat_dev\" ]; then\n\n    TBL_HOST=\"tableau.bzdwh.oat.hsbc-10340762-bzdwh2-dev.dev.gcp.cloud.us.hsbc\"\n\n    HOST_NAME=\"financerisk-tableau-server-10340762-bzdwh2-dev\"\n\nelif [ \"${TBL_ENVIRONMENT}\" = \"uat\" ]; then\n\n    TBL_HOST=\"tablu.bzdwh.uat.hsbc-10340762-bzdwhuat-dev.dev.gcp.cloud.us.hsbc\"\n\n    HOST_NAME=\"financerisk-tableau-server-10340762-bzdwhuat-dev\"\n\nelif [ \"${TBL_ENVIRONMENT}\" = \"prod\" ]; then\n\n    TBL_HOST=\"tableau.bzdwh.hsbc-10340762-bzdwh-prod.prod.gcp.cloud.us.hsbc\"\n\n    HOST_NAME=\"financerisk-tableau-server-10340762-bzdwh-prod\"\n\nelse\n\n    TBL_HOST=\"tableau.bzdwh.dev.hsbc-10340762-bzdwh-dev.dev.gcp.cloud.us.hsbc\"\n\n    HOST_NAME=\"financerisk-tableau-server-10340762-bzdwh-dev\"\n\nfi\n\nsudo hostnamectl set-hostname $TBL_HOST\n\n \n\n#---\u003e Local variables for Tableau service\n\nTABLEAU_ADMIN=\"tsmadmin\"\n\nTABLEAU_SETUP=/tmp\n\nTABLEAU_INST_LOG=/tmp/setup.log\n\nTABLEAU_SRV=/etc/opt/tableau/tableau_server\n\nTABLEAU_BASE=/opt/tableau/tableau_server/packages\n\nTABLEAU_VER=20204.21.1217.2244\n\nTABLEAU_SSL=/opt/tableau/tableau_server/data/ssl\n\nTABLEAU_VAR=/var/opt/tableau/tableau_server\n\nTABLEAU_PROXY=\"20-proxy.conf\"\n\nTABLEAU_STORE_LIC=\"internal-financerisk-configuration-bucket-${TBL_ENVIRONMENT}/offline-deactivation\"\n\n \n\nTABLEAU_TRIAL=true\n\nTABLEAU_KEY=TSCT-B31D-9000-B9AC-8CD5\n\n \n\nSRV_PROXY=http://intpxy6.hk.hsbc:18084/\n\nPROXY_ENABLE=true\n\n \n\nMULTINIC_INSTANCE_NIC1_IP=$(curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/1/ip)\n\nSTANDALONE_SUBNET_GATEWAY=$(curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/1/gateway)\n\nsudo ifconfig eth1 $MULTINIC_INSTANCE_NIC1_IP netmask 255.255.255.255 broadcast $MULTINIC_INSTANCE_NIC1_IP mtu 1430\n\necho \"1 rt1\" | sudo tee -a /etc/iproute2/rt_tables\n\nsudo ip route add $STANDALONE_SUBNET_GATEWAY src $MULTINIC_INSTANCE_NIC1_IP dev eth1 table rt1\n\nsudo ip route add default via $STANDALONE_SUBNET_GATEWAY dev eth1 table rt1\n\nsudo ip rule add from $MULTINIC_INSTANCE_NIC1_IP/32 table rt1\n\nsudo ip rule add to $MULTINIC_INSTANCE_NIC1_IP/32 table rt1\n\nsudo ip route add 192.168.196.1 src $MULTINIC_INSTANCE_NIC1_IP dev eth1 table rt1\n\nsudo ip route add 192.168.196.0/22 dev eth1\n\n \n\nRESTORE_LATESTS=false\n\nBACKUP_ENABLED=true\n\necho \"BACKUP_ENABLED: $BACKUP_ENABLED\" \u003e\u003e ${TABLEAU_INST_LOG}\n\necho \"RESTORE_LATESTS: $RESTORE_LATESTS\" \u003e\u003e ${TABLEAU_INST_LOG}\n\necho \"RESTORE_FILE: $RESTORE_FILE\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n \n\n#Setup Tableau initial environment\n\nif [ \"$PROXY_ENABLE\" = true ] ; then\n\n    echo \"${TABLEAU_BASE}/scripts.${TABLEAU_VER}/initialize-tsm -f --accepteula -a ${TABLEAU_ADMIN} --http_proxy=${SRV_PROXY}\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/scripts.${TABLEAU_VER}/initialize-tsm -f --accepteula -a ${TABLEAU_ADMIN} --http_proxy=${SRV_PROXY} \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nelse\n\n    echo \"${TABLEAU_BASE}/scripts.${TABLEAU_VER}/initialize-tsm -f --accepteula -a ${TABLEAU_ADMIN}\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/scripts.${TABLEAU_VER}/initialize-tsm -f --accepteula -a ${TABLEAU_ADMIN} \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nfi\n\nwait\n\nif [ \"$TABLEAU_TRIAL\" = true ] ; then\n\n    echo \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses activate --trial\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses activate --trial \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    wait\n\nfi\n\n#---\u003e Proxy configuration\n\nif [ \"$PROXY_ENABLE\" = true ] ; then\n\n    MULTINIC_INSTANCE_NIC0_IP=$(curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip)\n\n    echo $'\\n' \u003e\u003e ${TABLEAU_SETUP}/${TABLEAU_PROXY}\n\n    echo \"no_proxy=\\\"localhost,127.0.0.1,${MULTINIC_INSTANCE_NIC0_IP},${TBL_HOST},${HOST_NAME},gcp-asia-east2-p-ombbusvis-tableau,*.internal\\\"\" \u003e\u003e ${TABLEAU_SETUP}/${TABLEAU_PROXY}\n\n    sudo -u tableau mkdir -p ${TABLEAU_VAR}/.config/systemd/tableau_server.conf.d/\n\n    chown tableau:tableau ${TABLEAU_SETUP}/${TABLEAU_PROXY}\n\n    sudo -u tableau mv ${TABLEAU_SETUP}/${TABLEAU_PROXY} ${TABLEAU_VAR}/.config/systemd/tableau_server.conf.d/\n\nfi\n\nif [ -v TABLEAU_KEY ] \u0026\u0026 [ ! -z \"$TABLEAU_KEY\" ]; then\n\n    echo \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses activate -k ${TABLEAU_KEY}\" \u003e\u003e /tmp/setup.log\n\n    ${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses activate -k ${TABLEAU_KEY} \u003e\u003e /tmp/setup.log 2\u003e\u00261 \u0026\n\n    wait\n\n    echo \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses get-offline-deactivation-file -k ${TABLEAU_KEY} --output-dir ${TABLEAU_SETUP}\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses get-offline-deactivation-file -k ${TABLEAU_KEY} --output-dir ${TABLEAU_SETUP} \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    wait\n\n    TBL_LIC_DATE=$(date +\"%Y%m%d%H%M%S\")\n\n    echo \"gsutil cp ${TABLEAU_SETUP}/deactivate.tlq gs://${TABLEAU_STORE_LIC}/deactivate_${TBL_ENVIRONMENT}_${TBL_LIC_DATE}.tlq\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    gsutil cp ${TABLEAU_SETUP}/deactivate.tlq gs://${TABLEAU_STORE_LIC}/deactivate_${TBL_ENVIRONMENT}_${TBL_LIC_DATE}.tlq \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    wait\n\n    echo \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses list\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses list \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    wait\n\nfi\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm register --file ${TABLEAU_SETUP}/regtbl.json\"  \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm register --file ${TABLEAU_SETUP}/regtbl.json \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm security external-ssl enable --cert-file ${TABLEAU_SSL}/financerisk-tableau-bzdwh.cloud.uk.hsbc.cer --key-file ${TABLEAU_SSL}/financerisk-tableau-bzdwh.cloud.uk.hsbc.key --trust-admin-controller-cert\" \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n#${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm security external-ssl enable --cert-file ${TABLEAU_SSL}/financerisk-tableau-bzdwh.cloud.uk.hsbc.cer --key-file ${TABLEAU_SSL}/financerisk-tableau-bzdwh.cloud.uk.hsbc.key --trust-admin-controller-cert \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/repository.${TABLEAU_VER}/jre/bin/keytool -importcert -file ${TABLEAU_SSL}/HSBC_CRESTEST_SHA2.crt -alias aa-lds-test-us.crestest.addev.hsbc -keystore ${TABLEAU_SRV}/tableauservicesmanagerca.jks -storepass changeit -noprompt\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/repository.${TABLEAU_VER}/jre/bin/keytool -importcert -file ${TABLEAU_SSL}/HSBC_CRESTEST_SHA2.crt -alias aa-lds-test-us.crestest.addev.hsbc -keystore ${TABLEAU_SRV}/tableauservicesmanagerca.jks -storepass changeit -noprompt \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm settings import -f ${TABLEAU_SETUP}/conftbl_gw.json\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm settings import -f ${TABLEAU_SETUP}/conftbl_gw.json \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\nsudo chmod 555 ${TABLEAU_SETUP}/${TABLEAU_IDENTITY}\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm settings import -f ${TABLEAU_SETUP}/${TABLEAU_IDENTITY}\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm settings import -f ${TABLEAU_SETUP}/${TABLEAU_IDENTITY} \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\n#${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm topology external-services repository enable -f ${TABLEAU_SETUP}/external_db.json -c ${TABLEAU_SSL}/tableau-postgresql.pem \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n#wait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm user-identity-store verify-group-mappings -v Infodir-HBMX-HBBZ-DWH-TABLEAU\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm user-identity-store verify-group-mappings -v Infodir-HBMX-HBBZ-DWH-TABLEAU \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm initialize -r\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm initialize -r \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tabcmd initialuser --server localhost:80 -u US-SVC-DWHAdmin -p LiolY24JKEUqaLQ598Lc32HsVbL\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tabcmd initialuser --server localhost:80 -u US-SVC-DWHAdmin -p LiolY24JKEUqaLQ598Lc32HsVbL \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\nif [ \"$RESTORE_LATESTS\" = true ] ; then\n\n    echo \"Restoring Tableau from backup\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    echo \"sudo /opt/tableau/backup/tbl_restore.sh $RESTORE_FILE\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    sudo /opt/tableau/backup/tbl_restore.sh $RESTORE_FILE \u003e\u003e ${TABLEAU_INST_LOG}\n\n    echo \"Restoration done\" \u003e\u003e ${TABLEAU_INST_LOG}\n\nfi\n\nif [ \"$BACKUP_ENABLED\" = true ] ; then\n\n    echo \"Enabling Tableau backup\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    sudo crontab -u root -l \u003e ${TABLEAU_SETUP}/cron_backup.dat\n\n    sudo cat ${TABLEAU_SETUP}/crontab.backup \u003e\u003e ${TABLEAU_SETUP}/cron_backup.dat\n\n    sudo crontab -u root ${TABLEAU_SETUP}/cron_backup.dat\n\n    sudo rm ${TABLEAU_SETUP}/cron_backup.dat\n\n    echo \"sudo crontab -u root -l\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    sudo crontab -u root -l \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    echo \"Backup setup done\" \u003e\u003e ${TABLEAU_INST_LOG}\n\nfi\n\necho \"Setup completed.\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm status \u003e\u003e ${TABLEAU_INST_LOG}",
            "min_cpu_platform": "",
            "name": "test-2",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "35.188.40.196",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "ipv6_access_config": [],
                "ipv6_access_type": "",
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/white-list-372815/global/networks/default",
                "network_ip": "10.128.0.12",
                "nic_type": "",
                "queue_count": 0,
                "stack_type": "IPV4_ONLY",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/white-list-372815/regions/us-central1/subnetworks/default",
                "subnetwork_project": "white-list-372815"
              }
            ],
            "project": "white-list-372815",
            "reservation_affinity": [],
            "resource_policies": null,
            "scheduling": [
              {
                "automatic_restart": true,
                "instance_termination_action": "",
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false,
                "provisioning_model": "STANDARD"
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-list-372815/zones/us-central1-a/instances/test-2",
            "service_account": [],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": [
              "bar",
              "foo"
            ],
            "tags_fingerprint": "1gqCRgrww4E=",
            "timeouts": null,
            "zone": "us-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9"
        },
        {
          "index_key": 2,
          "schema_version": 6,
          "attributes": {
            "advanced_machine_features": [],
            "allow_stopping_for_update": null,
            "attached_disk": [],
            "boot_disk": [
              {
                "auto_delete": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key_raw": "",
                "disk_encryption_key_sha256": "",
                "initialize_params": [
                  {
                    "image": "https://www.googleapis.com/compute/v1/projects/debian-cloud/global/images/debian-11-bullseye-v20230206",
                    "labels": {
                      "my_label": "value"
                    },
                    "size": 10,
                    "type": "pd-standard"
                  }
                ],
                "kms_key_self_link": "",
                "mode": "READ_WRITE",
                "source": "https://www.googleapis.com/compute/v1/projects/white-list-372815/zones/us-central1-a/disks/test-3"
              }
            ],
            "can_ip_forward": false,
            "confidential_instance_config": [],
            "cpu_platform": "Intel Broadwell",
            "current_status": "RUNNING",
            "deletion_protection": false,
            "description": "",
            "desired_status": null,
            "enable_display": false,
            "guest_accelerator": [],
            "hostname": "",
            "id": "projects/white-list-372815/zones/us-central1-a/instances/test-3",
            "instance_id": "9190655208258763894",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "machine_type": "e2-medium",
            "metadata": {
              "foo": "bar"
            },
            "metadata_fingerprint": "N7Osmg_p0P4=",
            "metadata_startup_script": "#!/bin/bash -e\n\n###------------------------------------------------------------------------------------------###\n\n### Author:         Josue Rojas Montero\n\n### Mail:           josue.rojas@noexternalmail.hsbc.com\n\n### Description:    Setup of programs, users and libraries installation via local repositories\n\n### Date:           Julio-22-2021\n\n### Modified:       None\n\n### Version:        1.0.0\n\n### Script:         tableau_setup.sh\n\n### Location:       GitHub repository\n\n### Instructions:   Compute Engine VM Instances provisioning via Terraform\n\n### Changes:        \n\n###                 -\n\n###------------------------------------------------------------------------------------------###\n\n \n\n#-----------\u003e LDAP FILES, important to request for PROD\n\n# Important, the LDAP.json or config.json settings file is the used to query/filter LDAP Groups/Users and requires a LDAP.cer file\n\n#TABLEAU_IDENTITY=\"regtbl.json\"\n\n#TABLEAU_IDENTITY=\"conftbl_ad.json\"\n\n#TABLEAU_IDENTITY=\"conftbl.json\"\n\n#TABLEAU_IDENTITY=\"LDAP.json\"\n\n# ---- Leyla Viera (leyla.v.dearaujo@hsbc.com) provides the LDAP .cer (HSBC CRES SHA2.renametocer)\n\n# https://alm-confluence.systems.uk.hsbc/confluence/display/CATAD/How+to+Request+a+Production+ADLDS+Group+In+Service+Now  \n\n#----------- LDAP FILES, important to request for PROD\n\n \n\n#TABLEAU_ENVIROMENT=\"tableau_setup.sh\"\n\n \n\nTBL_ENVIRONMENT=\"dev\"\n\necho \"TBL_ENVIRONMENT: ${TBL_ENVIRONMENT}\" \u003e\u003e /tmp/setup.log\n\nif [ \"${TBL_ENVIRONMENT}\" = \"oat_dev\" ]; then\n\n    TBL_HOST=\"tableau.bzdwh.oat.hsbc-10340762-bzdwh2-dev.dev.gcp.cloud.us.hsbc\"\n\n    HOST_NAME=\"financerisk-tableau-server-10340762-bzdwh2-dev\"\n\nelif [ \"${TBL_ENVIRONMENT}\" = \"uat\" ]; then\n\n    TBL_HOST=\"tablu.bzdwh.uat.hsbc-10340762-bzdwhuat-dev.dev.gcp.cloud.us.hsbc\"\n\n    HOST_NAME=\"financerisk-tableau-server-10340762-bzdwhuat-dev\"\n\nelif [ \"${TBL_ENVIRONMENT}\" = \"prod\" ]; then\n\n    TBL_HOST=\"tableau.bzdwh.hsbc-10340762-bzdwh-prod.prod.gcp.cloud.us.hsbc\"\n\n    HOST_NAME=\"financerisk-tableau-server-10340762-bzdwh-prod\"\n\nelse\n\n    TBL_HOST=\"tableau.bzdwh.dev.hsbc-10340762-bzdwh-dev.dev.gcp.cloud.us.hsbc\"\n\n    HOST_NAME=\"financerisk-tableau-server-10340762-bzdwh-dev\"\n\nfi\n\nsudo hostnamectl set-hostname $TBL_HOST\n\n \n\n#---\u003e Local variables for Tableau service\n\nTABLEAU_ADMIN=\"tsmadmin\"\n\nTABLEAU_SETUP=/tmp\n\nTABLEAU_INST_LOG=/tmp/setup.log\n\nTABLEAU_SRV=/etc/opt/tableau/tableau_server\n\nTABLEAU_BASE=/opt/tableau/tableau_server/packages\n\nTABLEAU_VER=20204.21.1217.2244\n\nTABLEAU_SSL=/opt/tableau/tableau_server/data/ssl\n\nTABLEAU_VAR=/var/opt/tableau/tableau_server\n\nTABLEAU_PROXY=\"20-proxy.conf\"\n\nTABLEAU_STORE_LIC=\"internal-financerisk-configuration-bucket-${TBL_ENVIRONMENT}/offline-deactivation\"\n\n \n\nTABLEAU_TRIAL=true\n\nTABLEAU_KEY=TSCT-B31D-9000-B9AC-8CD5\n\n \n\nSRV_PROXY=http://intpxy6.hk.hsbc:18084/\n\nPROXY_ENABLE=true\n\n \n\nMULTINIC_INSTANCE_NIC1_IP=$(curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/1/ip)\n\nSTANDALONE_SUBNET_GATEWAY=$(curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/1/gateway)\n\nsudo ifconfig eth1 $MULTINIC_INSTANCE_NIC1_IP netmask 255.255.255.255 broadcast $MULTINIC_INSTANCE_NIC1_IP mtu 1430\n\necho \"1 rt1\" | sudo tee -a /etc/iproute2/rt_tables\n\nsudo ip route add $STANDALONE_SUBNET_GATEWAY src $MULTINIC_INSTANCE_NIC1_IP dev eth1 table rt1\n\nsudo ip route add default via $STANDALONE_SUBNET_GATEWAY dev eth1 table rt1\n\nsudo ip rule add from $MULTINIC_INSTANCE_NIC1_IP/32 table rt1\n\nsudo ip rule add to $MULTINIC_INSTANCE_NIC1_IP/32 table rt1\n\nsudo ip route add 192.168.196.1 src $MULTINIC_INSTANCE_NIC1_IP dev eth1 table rt1\n\nsudo ip route add 192.168.196.0/22 dev eth1\n\n \n\nRESTORE_LATESTS=false\n\nBACKUP_ENABLED=true\n\necho \"BACKUP_ENABLED: $BACKUP_ENABLED\" \u003e\u003e ${TABLEAU_INST_LOG}\n\necho \"RESTORE_LATESTS: $RESTORE_LATESTS\" \u003e\u003e ${TABLEAU_INST_LOG}\n\necho \"RESTORE_FILE: $RESTORE_FILE\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n \n\n#Setup Tableau initial environment\n\nif [ \"$PROXY_ENABLE\" = true ] ; then\n\n    echo \"${TABLEAU_BASE}/scripts.${TABLEAU_VER}/initialize-tsm -f --accepteula -a ${TABLEAU_ADMIN} --http_proxy=${SRV_PROXY}\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/scripts.${TABLEAU_VER}/initialize-tsm -f --accepteula -a ${TABLEAU_ADMIN} --http_proxy=${SRV_PROXY} \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nelse\n\n    echo \"${TABLEAU_BASE}/scripts.${TABLEAU_VER}/initialize-tsm -f --accepteula -a ${TABLEAU_ADMIN}\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/scripts.${TABLEAU_VER}/initialize-tsm -f --accepteula -a ${TABLEAU_ADMIN} \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nfi\n\nwait\n\nif [ \"$TABLEAU_TRIAL\" = true ] ; then\n\n    echo \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses activate --trial\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses activate --trial \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    wait\n\nfi\n\n#---\u003e Proxy configuration\n\nif [ \"$PROXY_ENABLE\" = true ] ; then\n\n    MULTINIC_INSTANCE_NIC0_IP=$(curl -H \"Metadata-Flavor: Google\" http://169.254.169.254/computeMetadata/v1/instance/network-interfaces/0/ip)\n\n    echo $'\\n' \u003e\u003e ${TABLEAU_SETUP}/${TABLEAU_PROXY}\n\n    echo \"no_proxy=\\\"localhost,127.0.0.1,${MULTINIC_INSTANCE_NIC0_IP},${TBL_HOST},${HOST_NAME},gcp-asia-east2-p-ombbusvis-tableau,*.internal\\\"\" \u003e\u003e ${TABLEAU_SETUP}/${TABLEAU_PROXY}\n\n    sudo -u tableau mkdir -p ${TABLEAU_VAR}/.config/systemd/tableau_server.conf.d/\n\n    chown tableau:tableau ${TABLEAU_SETUP}/${TABLEAU_PROXY}\n\n    sudo -u tableau mv ${TABLEAU_SETUP}/${TABLEAU_PROXY} ${TABLEAU_VAR}/.config/systemd/tableau_server.conf.d/\n\nfi\n\nif [ -v TABLEAU_KEY ] \u0026\u0026 [ ! -z \"$TABLEAU_KEY\" ]; then\n\n    echo \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses activate -k ${TABLEAU_KEY}\" \u003e\u003e /tmp/setup.log\n\n    ${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses activate -k ${TABLEAU_KEY} \u003e\u003e /tmp/setup.log 2\u003e\u00261 \u0026\n\n    wait\n\n    echo \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses get-offline-deactivation-file -k ${TABLEAU_KEY} --output-dir ${TABLEAU_SETUP}\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses get-offline-deactivation-file -k ${TABLEAU_KEY} --output-dir ${TABLEAU_SETUP} \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    wait\n\n    TBL_LIC_DATE=$(date +\"%Y%m%d%H%M%S\")\n\n    echo \"gsutil cp ${TABLEAU_SETUP}/deactivate.tlq gs://${TABLEAU_STORE_LIC}/deactivate_${TBL_ENVIRONMENT}_${TBL_LIC_DATE}.tlq\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    gsutil cp ${TABLEAU_SETUP}/deactivate.tlq gs://${TABLEAU_STORE_LIC}/deactivate_${TBL_ENVIRONMENT}_${TBL_LIC_DATE}.tlq \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    wait\n\n    echo \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses list\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    ${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm licenses list \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    wait\n\nfi\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm register --file ${TABLEAU_SETUP}/regtbl.json\"  \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm register --file ${TABLEAU_SETUP}/regtbl.json \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm security external-ssl enable --cert-file ${TABLEAU_SSL}/financerisk-tableau-bzdwh.cloud.uk.hsbc.cer --key-file ${TABLEAU_SSL}/financerisk-tableau-bzdwh.cloud.uk.hsbc.key --trust-admin-controller-cert\" \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n#${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm security external-ssl enable --cert-file ${TABLEAU_SSL}/financerisk-tableau-bzdwh.cloud.uk.hsbc.cer --key-file ${TABLEAU_SSL}/financerisk-tableau-bzdwh.cloud.uk.hsbc.key --trust-admin-controller-cert \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/repository.${TABLEAU_VER}/jre/bin/keytool -importcert -file ${TABLEAU_SSL}/HSBC_CRESTEST_SHA2.crt -alias aa-lds-test-us.crestest.addev.hsbc -keystore ${TABLEAU_SRV}/tableauservicesmanagerca.jks -storepass changeit -noprompt\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/repository.${TABLEAU_VER}/jre/bin/keytool -importcert -file ${TABLEAU_SSL}/HSBC_CRESTEST_SHA2.crt -alias aa-lds-test-us.crestest.addev.hsbc -keystore ${TABLEAU_SRV}/tableauservicesmanagerca.jks -storepass changeit -noprompt \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm settings import -f ${TABLEAU_SETUP}/conftbl_gw.json\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm settings import -f ${TABLEAU_SETUP}/conftbl_gw.json \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\nsudo chmod 555 ${TABLEAU_SETUP}/${TABLEAU_IDENTITY}\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm settings import -f ${TABLEAU_SETUP}/${TABLEAU_IDENTITY}\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm settings import -f ${TABLEAU_SETUP}/${TABLEAU_IDENTITY} \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\n#${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm topology external-services repository enable -f ${TABLEAU_SETUP}/external_db.json -c ${TABLEAU_SSL}/tableau-postgresql.pem \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n#wait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm user-identity-store verify-group-mappings -v Infodir-HBMX-HBBZ-DWH-TABLEAU\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm user-identity-store verify-group-mappings -v Infodir-HBMX-HBBZ-DWH-TABLEAU \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm initialize -r\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm initialize -r \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm pending-changes apply --ignore-prompt \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\necho \"${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tabcmd initialuser --server localhost:80 -u US-SVC-DWHAdmin -p LiolY24JKEUqaLQ598Lc32HsVbL\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tabcmd initialuser --server localhost:80 -u US-SVC-DWHAdmin -p LiolY24JKEUqaLQ598Lc32HsVbL \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\nwait\n\nif [ \"$RESTORE_LATESTS\" = true ] ; then\n\n    echo \"Restoring Tableau from backup\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    echo \"sudo /opt/tableau/backup/tbl_restore.sh $RESTORE_FILE\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    sudo /opt/tableau/backup/tbl_restore.sh $RESTORE_FILE \u003e\u003e ${TABLEAU_INST_LOG}\n\n    echo \"Restoration done\" \u003e\u003e ${TABLEAU_INST_LOG}\n\nfi\n\nif [ \"$BACKUP_ENABLED\" = true ] ; then\n\n    echo \"Enabling Tableau backup\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    sudo crontab -u root -l \u003e ${TABLEAU_SETUP}/cron_backup.dat\n\n    sudo cat ${TABLEAU_SETUP}/crontab.backup \u003e\u003e ${TABLEAU_SETUP}/cron_backup.dat\n\n    sudo crontab -u root ${TABLEAU_SETUP}/cron_backup.dat\n\n    sudo rm ${TABLEAU_SETUP}/cron_backup.dat\n\n    echo \"sudo crontab -u root -l\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n    sudo crontab -u root -l \u003e\u003e ${TABLEAU_INST_LOG} 2\u003e\u00261 \u0026\n\n    echo \"Backup setup done\" \u003e\u003e ${TABLEAU_INST_LOG}\n\nfi\n\necho \"Setup completed.\" \u003e\u003e ${TABLEAU_INST_LOG}\n\n${TABLEAU_BASE}/customer-bin.${TABLEAU_VER}/tsm status \u003e\u003e ${TABLEAU_INST_LOG}",
            "min_cpu_platform": "",
            "name": "test-3",
            "network_interface": [
              {
                "access_config": [
                  {
                    "nat_ip": "34.172.16.22",
                    "network_tier": "PREMIUM",
                    "public_ptr_domain_name": ""
                  }
                ],
                "alias_ip_range": [],
                "ipv6_access_config": [],
                "ipv6_access_type": "",
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/white-list-372815/global/networks/default",
                "network_ip": "10.128.0.13",
                "nic_type": "",
                "queue_count": 0,
                "stack_type": "IPV4_ONLY",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/white-list-372815/regions/us-central1/subnetworks/default",
                "subnetwork_project": "white-list-372815"
              }
            ],
            "project": "white-list-372815",
            "reservation_affinity": [],
            "resource_policies": null,
            "scheduling": [
              {
                "automatic_restart": true,
                "instance_termination_action": "",
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false,
                "provisioning_model": "STANDARD"
              }
            ],
            "scratch_disk": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/white-list-372815/zones/us-central1-a/instances/test-3",
            "service_account": [],
            "shielded_instance_config": [
              {
                "enable_integrity_monitoring": true,
                "enable_secure_boot": false,
                "enable_vtpm": true
              }
            ],
            "tags": [
              "bar",
              "foo"
            ],
            "tags_fingerprint": "1gqCRgrww4E=",
            "timeouts": null,
            "zone": "us-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiNiJ9"
        }
      ]
    }
  ],
  "check_results": null
}
